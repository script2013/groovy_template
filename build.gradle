apply plugin: 'java'
apply plugin: 'idea'
apply plugin:'application'
apply plugin: 'groovy'

//declare a main class for gradle run command coming from application plugin
mainClassName = "com.mycompany.ExampleGroovyClass"

idea {
  project {
    //if you want to set specific jdk and language level
    jdkName = 'jdk1.7.0_60'
    languageLevel = '1.7'

    //you can update the source wildcards

    //you can change the modules of the the *.ipr
    //modules = project(':someProject').idea.module

    //you can change the output file
    //outputFile = new File(outputFile.parentFile, 'someBetterName.ipr')

    //you can add project-level libraries
    //projectLibraries << new ProjectLibrary(name: "my-library", classes: [new Path("my-library")])
  }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()

	//repository on your local disk (locally distributed library)
    flatDir {
        dirs './locallib'
    }
}

sourceSets {
    main {
        java { srcDirs = [] }    // no source dirs for the java compiler
        groovy { srcDir "src" }  // compile everything in src/ with groovy
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'org.codehaus.groovy:groovy-all:2.2.0'
    //compile ":jar-from-mylocallibs:1.0" //add a jar file from locallib folder
	
    
	
	// Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
	testCompile "org.codehaus.groovy:groovy-all:2.3.0"	
}

